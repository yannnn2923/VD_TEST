apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-vda-deployment
  labels:
    {{- include "mon-chart.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "mon-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "mon-chart.labels" . | nindent 8 }}
      annotations:
        ad.datadoghq.com/app.logs: '[{"source": "python", "service":"vda"}]'
    spec:
      imagePullSecrets:
        - name: image-pull-secret
      containers:
        - name: {{ .Chart.Name }}
          image: "registry-docker.apps.eul.sncf.fr/04374.dev/vda3:1.0.0"
          imagePullPolicy: Always
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-postgres-credentials
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-postgres-credentials
                  key: POSTGRES_USER
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-postgres-credentials
                  key: POSTGRES_DB
            - name: POSTGRES_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-postgres-credentials
                  key: POSTGRES_HOST
            - name: POSTGRES_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-postgres-credentials
                  key: POSTGRES_PORT
            - name: URL_PREFIX
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-postgres-credentials
                  key: URL_PREFIX
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: http
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: http
            failureThreshold: 3
